# Generated by Django 5.2.7 on 2025-10-26 01:59

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('shop', '0002_product_average_rating_product_review_count_review'),
    ]

    operations = [
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='The code customers will enter.', max_length=50, unique=True)),
                ('discount_type', models.CharField(choices=[('percentage', 'Percentage'), ('fixed', 'Fixed Amount')], default='percentage', max_length=10)),
                ('discount_value', models.DecimalField(decimal_places=2, help_text='The discount value. If percentage, enter a number like 10 for 10%. If fixed, enter the amount.', max_digits=10)),
                ('min_purchase_amount', models.DecimalField(blank=True, decimal_places=2, help_text='The minimum cart total required to use this coupon.', max_digits=10, null=True)),
                ('valid_from', models.DateTimeField(help_text='The date and time from which the coupon is valid.')),
                ('valid_to', models.DateTimeField(help_text='The date and time until which the coupon is valid.')),
                ('is_active', models.BooleanField(default=True, help_text='Whether the coupon is currently active.')),
                ('max_uses', models.PositiveIntegerField(blank=True, help_text='Maximum number of times this coupon can be used in total.', null=True)),
                ('max_uses_per_user', models.PositiveIntegerField(default=1, help_text='Maximum number of times a single user can use this coupon.')),
                ('times_used', models.PositiveIntegerField(default=0, editable=False)),
            ],
            options={
                'verbose_name': 'Coupon',
                'verbose_name_plural': 'Coupons',
                'ordering': ['-valid_from'],
            },
        ),
        migrations.AddField(
            model_name='order',
            name='discount_amount',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10),
        ),
        migrations.AddField(
            model_name='vendorprofile',
            name='commission_rate',
            field=models.DecimalField(decimal_places=2, default=Decimal('10.00'), help_text="Commission percentage taken by the platform from this vendor's sales (e.g., 10 for 10%).", max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AddField(
            model_name='order',
            name='coupon',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='shop.coupon'),
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='shop.order')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shop_received_messages', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shop_sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('new_order', 'New Order'), ('new_review', 'New Review'), ('order_status_change', 'Order Status Change'), ('low_stock', 'Low Stock Warning'), ('general', 'General Announcement')], max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('link', models.URLField(blank=True, help_text='Link to the related object', max_length=500, null=True)),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shop_notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Payout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=10)),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('transaction_details', models.TextField(blank=True, help_text='e.g., Bank Transaction ID, confirmation number.')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payouts', to='shop.vendorprofile')),
            ],
            options={
                'ordering': ['-requested_at'],
            },
        ),
        migrations.CreateModel(
            name='VendorShipping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shipping_rate_cairo', models.DecimalField(decimal_places=2, default=Decimal('60.00'), max_digits=10)),
                ('shipping_rate_outside_cairo', models.DecimalField(decimal_places=2, default=Decimal('100.00'), max_digits=10)),
                ('free_shipping_threshold', models.DecimalField(blank=True, decimal_places=2, help_text='Offer free shipping for orders from this vendor above this amount. Leave blank to disable.', max_digits=10, null=True)),
                ('vendor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='shipping_settings', to='shop.vendorprofile')),
            ],
            options={
                'verbose_name': 'Vendor Shipping Setting',
                'verbose_name_plural': 'Vendor Shipping Settings',
            },
        ),
        migrations.CreateModel(
            name='VendorOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subtotal', models.DecimalField(decimal_places=2, help_text="Subtotal of vendor's items in this order.", max_digits=10)),
                ('shipping_charged', models.DecimalField(decimal_places=2, help_text="Shipping cost charged for this vendor's items.", max_digits=10)),
                ('commission_rate', models.DecimalField(decimal_places=2, help_text='Commission rate at the time of order (%).', max_digits=5)),
                ('commission_amount', models.DecimalField(decimal_places=2, help_text='Commission amount taken by the platform.', max_digits=10)),
                ('net_payout', models.DecimalField(decimal_places=2, help_text='The final amount to be paid out to the vendor.', max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendor_orders', to='shop.order')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vendor_orders', to='shop.vendorprofile')),
            ],
            options={
                'verbose_name': 'Vendor Order',
                'verbose_name_plural': 'Vendor Orders',
                'ordering': ['-created_at'],
                'unique_together': {('order', 'vendor')},
            },
        ),
    ]
